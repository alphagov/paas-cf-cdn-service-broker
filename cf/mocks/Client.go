// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cfclient "github.com/cloudfoundry-community/go-cfclient"
	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetOrgByGuid provides a mock function with given fields: guid
func (_m *Client) GetOrgByGuid(guid string) (cfclient.Org, error) {
	ret := _m.Called(guid)

	var r0 cfclient.Org
	if rf, ok := ret.Get(0).(func(string) cfclient.Org); ok {
		r0 = rf(guid)
	} else {
		r0 = ret.Get(0).(cfclient.Org)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(guid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListV3Domains provides a mock function with given fields: query
func (_m *Client) ListV3Domains(query url.Values) ([]cfclient.V3Domain, error) {
	ret := _m.Called(query)

	var r0 []cfclient.V3Domain
	if rf, ok := ret.Get(0).(func(url.Values) []cfclient.V3Domain); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]cfclient.V3Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(url.Values) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewClientT interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t NewClientT) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
